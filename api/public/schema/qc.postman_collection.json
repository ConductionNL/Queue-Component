{
	"info": {
		"_postman_id": "ce780685-c88d-445e-b804-9a8b9cfe25ac",
		"name": "Queue Component",
		"description": "API Details\n- Component: Queue Component\n- Reference: que\n- Enviroment: dev\n- Version: V.0.1\n- Repository: [online](https://github.com/ConductionNL/proto-component) / [zip](https://github.com/ConductionNL/proto-component/archive/master.zip)\n- Docker Image: [online](https://hub.docker.com/repository/docker/conduction/pc-php) \n- Datamodel: [postman](/schema/que.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) \n\n'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         \n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "tasks",
			"item": [
				{
					"name": "Retrieves the collection of Task resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0cc84332-6ad9-4278-9fcc-836f25f08d93",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "Task collection response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks?order[id]=<string>&order[name]=<string>&order[description]=<string>&order[endpoint]=<string>&order[type]=<string>&order[status]=<string>&order[requestHeaders]=<string>&order[requestBody]=<string>&order[responseHeaders]=<string>&order[responseBody]=<string>&order[responseCode]=<string>&order[webHookHeaders]=<string>&order[webHookEndpoint]=<string>&order[webHookStatus]=<string>&order[webHookCode]=<string>&order[application]=<string>&order[organization]=<string>&order[process]=<string>&order[dateToTrigger]=<string>&order[dateTriggered]=<string>&order[dateCreated]=<string>&order[dateModified]=<string>&dateToTrigger[before]=<string>&dateToTrigger[strictly_before]=<string>&dateToTrigger[after]=<string>&dateToTrigger[strictly_after]=<string>&dateTriggered[before]=<string>&dateTriggered[strictly_before]=<string>&dateTriggered[after]=<string>&dateTriggered[strictly_after]=<string>&dateCreated[before]=<string>&dateCreated[strictly_before]=<string>&dateCreated[after]=<string>&dateCreated[strictly_after]=<string>&dateModified[before]=<string>&dateModified[strictly_before]=<string>&dateModified[after]=<string>&dateModified[strictly_after]=<string>&id=<string>&id[]=<string>&id[]=<string>&name=<string>&name[]=<string>&name[]=<string>&description=<string>&description[]=<string>&description[]=<string>&endpoint=<string>&endpoint[]=<string>&endpoint[]=<string>&type=<string>&type[]=<string>&type[]=<string>&status=<string>&status[]=<string>&status[]=<string>&requestHeaders=<string>&requestHeaders[][]=<string>&requestHeaders[][]=<string>&requestBody=<string>&requestBody[][]=<string>&requestBody[][]=<string>&responseHeaders=<string>&responseHeaders[][]=<string>&responseHeaders[][]=<string>&responseBody=<string>&responseBody[][]=<string>&responseBody[][]=<string>&responseCode=<integer>&responseCode[]=<integer>&responseCode[]=<integer>&webHookHeaders=<string>&webHookHeaders[][]=<string>&webHookHeaders[][]=<string>&webHookEndpoint=<string>&webHookEndpoint[]=<string>&webHookEndpoint[]=<string>&webHookStatus=<string>&webHookStatus[]=<string>&webHookStatus[]=<string>&webHookCode=<integer>&webHookCode[]=<integer>&webHookCode[]=<integer>&application=<string>&application[]=<string>&application[]=<string>&organization=<string>&organization[]=<string>&organization[]=<string>&process=<string>&process[]=<string>&process[]=<string>&dateToTrigger=<string>&dateToTrigger[]=<string>&dateTriggered=<string>&dateTriggered[]=<string>&dateCreated=<string>&dateCreated[]=<string>&dateModified=<string>&dateModified[]=<string>&page=1&extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									],
									"query": [
										{
											"key": "order[id]",
											"value": "<string>"
										},
										{
											"key": "order[name]",
											"value": "<string>"
										},
										{
											"key": "order[description]",
											"value": "<string>"
										},
										{
											"key": "order[endpoint]",
											"value": "<string>"
										},
										{
											"key": "order[type]",
											"value": "<string>"
										},
										{
											"key": "order[status]",
											"value": "<string>"
										},
										{
											"key": "order[requestHeaders]",
											"value": "<string>"
										},
										{
											"key": "order[requestBody]",
											"value": "<string>"
										},
										{
											"key": "order[responseHeaders]",
											"value": "<string>"
										},
										{
											"key": "order[responseBody]",
											"value": "<string>"
										},
										{
											"key": "order[responseCode]",
											"value": "<string>"
										},
										{
											"key": "order[webHookHeaders]",
											"value": "<string>"
										},
										{
											"key": "order[webHookEndpoint]",
											"value": "<string>"
										},
										{
											"key": "order[webHookStatus]",
											"value": "<string>"
										},
										{
											"key": "order[webHookCode]",
											"value": "<string>"
										},
										{
											"key": "order[application]",
											"value": "<string>"
										},
										{
											"key": "order[organization]",
											"value": "<string>"
										},
										{
											"key": "order[process]",
											"value": "<string>"
										},
										{
											"key": "order[dateToTrigger]",
											"value": "<string>"
										},
										{
											"key": "order[dateTriggered]",
											"value": "<string>"
										},
										{
											"key": "order[dateCreated]",
											"value": "<string>"
										},
										{
											"key": "order[dateModified]",
											"value": "<string>"
										},
										{
											"key": "dateToTrigger[before]",
											"value": "<string>"
										},
										{
											"key": "dateToTrigger[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateToTrigger[after]",
											"value": "<string>"
										},
										{
											"key": "dateToTrigger[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "dateTriggered[before]",
											"value": "<string>"
										},
										{
											"key": "dateTriggered[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateTriggered[after]",
											"value": "<string>"
										},
										{
											"key": "dateTriggered[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[after]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "endpoint",
											"value": "<string>"
										},
										{
											"key": "endpoint[]",
											"value": "<string>"
										},
										{
											"key": "endpoint[]",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "type[]",
											"value": "<string>"
										},
										{
											"key": "type[]",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "status[]",
											"value": "<string>"
										},
										{
											"key": "status[]",
											"value": "<string>"
										},
										{
											"key": "requestHeaders",
											"value": "<string>"
										},
										{
											"key": "requestHeaders[][]",
											"value": "<string>"
										},
										{
											"key": "requestHeaders[][]",
											"value": "<string>"
										},
										{
											"key": "requestBody",
											"value": "<string>"
										},
										{
											"key": "requestBody[][]",
											"value": "<string>"
										},
										{
											"key": "requestBody[][]",
											"value": "<string>"
										},
										{
											"key": "responseHeaders",
											"value": "<string>"
										},
										{
											"key": "responseHeaders[][]",
											"value": "<string>"
										},
										{
											"key": "responseHeaders[][]",
											"value": "<string>"
										},
										{
											"key": "responseBody",
											"value": "<string>"
										},
										{
											"key": "responseBody[][]",
											"value": "<string>"
										},
										{
											"key": "responseBody[][]",
											"value": "<string>"
										},
										{
											"key": "responseCode",
											"value": "<integer>"
										},
										{
											"key": "responseCode[]",
											"value": "<integer>"
										},
										{
											"key": "responseCode[]",
											"value": "<integer>"
										},
										{
											"key": "webHookHeaders",
											"value": "<string>"
										},
										{
											"key": "webHookHeaders[][]",
											"value": "<string>"
										},
										{
											"key": "webHookHeaders[][]",
											"value": "<string>"
										},
										{
											"key": "webHookEndpoint",
											"value": "<string>"
										},
										{
											"key": "webHookEndpoint[]",
											"value": "<string>"
										},
										{
											"key": "webHookEndpoint[]",
											"value": "<string>"
										},
										{
											"key": "webHookStatus",
											"value": "<string>"
										},
										{
											"key": "webHookStatus[]",
											"value": "<string>"
										},
										{
											"key": "webHookStatus[]",
											"value": "<string>"
										},
										{
											"key": "webHookCode",
											"value": "<integer>"
										},
										{
											"key": "webHookCode[]",
											"value": "<integer>"
										},
										{
											"key": "webHookCode[]",
											"value": "<integer>"
										},
										{
											"key": "application",
											"value": "<string>"
										},
										{
											"key": "application[]",
											"value": "<string>"
										},
										{
											"key": "application[]",
											"value": "<string>"
										},
										{
											"key": "organization",
											"value": "<string>"
										},
										{
											"key": "organization[]",
											"value": "<string>"
										},
										{
											"key": "organization[]",
											"value": "<string>"
										},
										{
											"key": "process",
											"value": "<string>"
										},
										{
											"key": "process[]",
											"value": "<string>"
										},
										{
											"key": "process[]",
											"value": "<string>"
										},
										{
											"key": "dateToTrigger",
											"value": "<string>"
										},
										{
											"key": "dateToTrigger[]",
											"value": "<string>"
										},
										{
											"key": "dateTriggered",
											"value": "<string>"
										},
										{
											"key": "dateTriggered[]",
											"value": "<string>"
										},
										{
											"key": "dateCreated",
											"value": "<string>"
										},
										{
											"key": "dateCreated[]",
											"value": "<string>"
										},
										{
											"key": "dateModified",
											"value": "<string>"
										},
										{
											"key": "dateModified[]",
											"value": "<string>"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"hydra:member\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"endpoint\": \"<string>\",\n   \"type\": \"<string>\",\n   \"status\": \"<string>\",\n   \"requestHeaders\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"requestBody\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"responseHeaders\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"responseBody\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"responseCode\": \"<integer>\",\n   \"webHookHeaders\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"webHookEndpoint\": \"<string>\",\n   \"webHookStatus\": \"<string>\",\n   \"webHookCode\": \"<integer>\",\n   \"application\": \"<string>\",\n   \"organization\": \"<string>\",\n   \"process\": \"<string>\",\n   \"dateToTrigger\": \"<dateTime>\",\n   \"dateTriggered\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"endpoint\": \"<string>\",\n   \"type\": \"<string>\",\n   \"status\": \"<string>\",\n   \"requestHeaders\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"requestBody\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"responseHeaders\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"responseBody\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"responseCode\": \"<integer>\",\n   \"webHookHeaders\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"webHookEndpoint\": \"<string>\",\n   \"webHookStatus\": \"<string>\",\n   \"webHookCode\": \"<integer>\",\n   \"application\": \"<string>\",\n   \"organization\": \"<string>\",\n   \"process\": \"<string>\",\n   \"dateToTrigger\": \"<dateTime>\",\n   \"dateTriggered\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\"\n  }\n ],\n \"hydra:totalItems\": \"<integer>\",\n \"hydra:view\": {\n  \"@id\": \"<iri-reference>\",\n  \"@type\": \"<string>\",\n  \"hydra:first\": \"<iri-reference>\",\n  \"hydra:last\": \"<iri-reference>\",\n  \"hydra:next\": \"<iri-reference>\"\n },\n \"hydra:search\": {\n  \"@type\": \"<string>\",\n  \"hydra:template\": \"<string>\",\n  \"hydra:variableRepresentation\": \"<string>\",\n  \"hydra:mapping\": [\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   },\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   }\n  ]\n }\n}"
						}
					]
				},
				{
					"name": "Creates a Task resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4cda9669-b7ed-4e87-b7e9-da9870186568",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"task\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"task\",\n    \"description\": \"this is a description\",\n    \"endpoint\": \"endpoint\",\n    \"type\": \"POST\",\n    \"status\": \"completed\",\n    \"requestHeaders\": [\n        \"header\",\n        \"header2\"\n    ],\n    \"requestBody\": \"body\",\n    \"responseHeaders\": [\n        \"header\",\n        \"header2\"\n    ],\n    \"responseBody\": [\n        \"body\",\n        \"body2\"\n    ],\n    \"webHookHeaders\": [\n        \"header\",\n        \"header2\"\n    ],\n    \"webHookEndpoint\": \"endpoint\",\n    \"webHookStatus\": \"completed\",\n    \"application\": \"https://www.test.nl\",\n    \"organization\": \"https://www.test.nl\",\n    \"process\": \"process\",\n\t\"dateToTrigger\": \"01-01-2020\",\n\t\"dateTriggered\": \"01-01-2020\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": [
						{
							"name": "Task resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"endpoint\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": \"<string>\",\n    \"requestHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"requestBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookEndpoint\": \"<string>\",\n    \"webHookStatus\": \"<string>\",\n    \"application\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"process\": \"<string>\",\n    \"dateToTrigger\": \"<dateTime>\",\n    \"dateTriggered\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"endpoint\": \"<string>\",\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"requestHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"requestBody\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseBody\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseCode\": \"<integer>\",\n \"webHookHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"webHookEndpoint\": \"<string>\",\n \"webHookStatus\": \"<string>\",\n \"webHookCode\": \"<integer>\",\n \"application\": \"<string>\",\n \"organization\": \"<string>\",\n \"process\": \"<string>\",\n \"dateToTrigger\": \"<dateTime>\",\n \"dateTriggered\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\"\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"endpoint\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": \"<string>\",\n    \"requestHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"requestBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookEndpoint\": \"<string>\",\n    \"webHookStatus\": \"<string>\",\n    \"application\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"process\": \"<string>\",\n    \"dateToTrigger\": \"<dateTime>\",\n    \"dateTriggered\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"endpoint\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": \"<string>\",\n    \"requestHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"requestBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookEndpoint\": \"<string>\",\n    \"webHookStatus\": \"<string>\",\n    \"application\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"process\": \"<string>\",\n    \"dateToTrigger\": \"<dateTime>\",\n    \"dateTriggered\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tasks/{id}",
			"item": [
				{
					"name": "Retrieves a Task resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28be647a-6545-403c-a5f8-096a8e4a5c6c",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{task}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{task}}"
							]
						}
					},
					"response": [
						{
							"name": "Task resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"endpoint\": \"<string>\",\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"requestHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"requestBody\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseBody\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseCode\": \"<integer>\",\n \"webHookHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"webHookEndpoint\": \"<string>\",\n \"webHookStatus\": \"<string>\",\n \"webHookCode\": \"<integer>\",\n \"application\": \"<string>\",\n \"organization\": \"<string>\",\n \"process\": \"<string>\",\n \"dateToTrigger\": \"<dateTime>\",\n \"dateTriggered\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\"\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces the Task resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51309032-1040-4e4b-a1db-1a0d70659281",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"task\",\n    \"description\": \"this is a description\",\n    \"endpoint\": \"endpoint\",\n    \"type\": \"POST\",\n    \"status\": \"completed\",\n    \"requestHeaders\": [\n        \"header\",\n        \"header2\"\n    ],\n    \"requestBody\": \"body\",\n    \"responseHeaders\": [\n        \"header\",\n        \"header2\"\n    ],\n    \"responseBody\": [\n        \"body\",\n        \"body2\"\n    ],\n    \"webHookHeaders\": [\n        \"header\",\n        \"header2\"\n    ],\n    \"webHookEndpoint\": \"endpoint\",\n    \"webHookStatus\": \"completed\",\n    \"application\": \"https://www.test.nl\",\n    \"organization\": \"https://www.test.nl\",\n    \"process\": \"process\",\n\t\"dateToTrigger\": \"01-01-2020\",\n\t\"dateTriggered\": \"01-01-2020\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tasks/{{task}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{task}}"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"endpoint\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": \"<string>\",\n    \"requestHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"requestBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookEndpoint\": \"<string>\",\n    \"webHookStatus\": \"<string>\",\n    \"application\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"process\": \"<string>\",\n    \"dateToTrigger\": \"<dateTime>\",\n    \"dateTriggered\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"endpoint\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": \"<string>\",\n    \"requestHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"requestBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookEndpoint\": \"<string>\",\n    \"webHookStatus\": \"<string>\",\n    \"application\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"process\": \"<string>\",\n    \"dateToTrigger\": \"<dateTime>\",\n    \"dateTriggered\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Task resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"endpoint\": \"<string>\",\n    \"type\": \"<string>\",\n    \"status\": \"<string>\",\n    \"requestHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"requestBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"responseBody\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookHeaders\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"webHookEndpoint\": \"<string>\",\n    \"webHookStatus\": \"<string>\",\n    \"application\": \"<string>\",\n    \"organization\": \"<string>\",\n    \"process\": \"<string>\",\n    \"dateToTrigger\": \"<dateTime>\",\n    \"dateTriggered\": \"<dateTime>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"endpoint\": \"<string>\",\n \"type\": \"<string>\",\n \"status\": \"<string>\",\n \"requestHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"requestBody\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseBody\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"responseCode\": \"<integer>\",\n \"webHookHeaders\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"webHookEndpoint\": \"<string>\",\n \"webHookStatus\": \"<string>\",\n \"webHookCode\": \"<integer>\",\n \"application\": \"<string>\",\n \"organization\": \"<string>\",\n \"process\": \"<string>\",\n \"dateToTrigger\": \"<dateTime>\",\n \"dateTriggered\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Removes the Task resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77d54c2e-c056-43c7-a9e3-5c902c47e439",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tasks/{{task}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"{{task}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Task resource deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{authorization}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6b751a75-810e-4670-8046-925fd51d7c20",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "55a0d7f0-5c94-4005-8584-09f935e27353",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cd97fa8f-20d0-4d4e-ad0b-ef9f487c6fa8",
			"key": "baseUrl",
			"value": "localhost"
		},
		{
			"id": "d1195f35-c342-475b-8477-3de9646a76bc",
			"key": "authorization",
			"value": "45c1a4b6-59d3-4a6e-86bf-88a872f35845"
		}
	],
	"protocolProfileBehavior": {}
}